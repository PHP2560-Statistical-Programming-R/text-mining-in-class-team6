word_counts <- sentiments_bing %>%
count(max_rating, word) %>%
group_by(max_rating) %>%
mutate(rating_counts = sum(n)) %>%
ungroup() %>%
mutate(prop = n / rating_counts)
top <- word_counts %>%
group_by(max_rating) %>%
top_n(n = 10, wt = prop) %>%
ungroup() %>%
arrange(desc(prop))
ggplot(top, aes(reorder(word, prop), prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free") +
coord_flip() +
ylab("") +
xlab("Top Ten Words") +
ggtitle("Top Ten Words used in Ted Talks by rating")
#######what are the most common sentiments within ted talks grouped by their most popular rating#########
sentiment_plot <- sentiments_nrc %>%
filter(!sentiment %in% c("positive", "negative")) %>%
count(max_rating, sentiment) %>%
group_by(max_rating) %>%
mutate(sentiment_count = sum(n)) %>%
ungroup() %>%
mutate(prop = n/ sentiment_count)
ggplot(sentiment_plot, aes(sentiment, prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free", labeller = ) +
coord_flip() +
ylab("") +
xlab("Sentiment") +
ggtitle("Distribution of Sentiments of Words used in Ted Talks by Rating")
### what is the distribution of ratings given to ted talks ###
rating_dist <- transcripts_clean %>%
distinct(name, max_rating) %>%
group_by(max_rating) %>%
count()
ggplot(rating_dist, aes(reorder(max_rating, n), n, fill = max_rating)) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Max Rating") +
ylab("Count") +
ggtitle("Distribution of Max Ratings given to all Ted Talks")
ggplot(word_freq, aes(reorder(word,n), n, fill = word)) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(word_freq, aes(reorder(word,n), n)) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#### what are the most used words among all ted talks###
word_freq <- sentiments_bing %>%
group_by(word) %>%
count() %>%
ungroup() %>%
top_n(50)
ggplot(word_freq, aes(reorder(word,n), n)) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
###decide to remove the word "Like" from further analysis -- it does not have a sentiment and has almost
###double the frequency of the next most common word
#### what are the most used words among all ted talks###
word_freq <- sentiments_bing %>%
group_by(word) %>%
count() %>%
ungroup() %>%
top_n(50)
ggplot(word_freq, aes(reorder(word,n), n, fill = "mistyrose")) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
###decide to remove the word "Like" from further analysis -- it does not have a sentiment and has almost
###double the frequency of the next most common word
#### what are the most used words among all ted talks###
word_freq <- sentiments_bing %>%
group_by(word) %>%
count() %>%
ungroup() %>%
top_n(50)
ggplot(word_freq, aes(reorder(word,n), n, fill = "lavenderblush")) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
###decide to remove the word "Like" from further analysis -- it does not have a sentiment and has almost
###double the frequency of the next most common word
#### what are the most used words among all ted talks###
word_freq <- sentiments_bing %>%
group_by(word) %>%
count() %>%
ungroup() %>%
top_n(50)
ggplot(word_freq, aes(reorder(word,n), n, fill = 10)) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
###decide to remove the word "Like" from further analysis -- it does not have a sentiment and has almost
###double the frequency of the next most common word
#### what are the most used words among all ted talks###
word_freq <- sentiments_bing %>%
group_by(word) %>%
count() %>%
ungroup() %>%
top_n(50)
ggplot(word_freq, aes(reorder(word,n), n, fill = "#9999CC")) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
###decide to remove the word "Like" from further analysis -- it does not have a sentiment and has almost
###double the frequency of the next most common word
#### what are the most used words among all ted talks###
word_freq <- sentiments_bing %>%
group_by(word) %>%
count() %>%
ungroup() %>%
top_n(50)
ggplot(word_freq, aes(reorder(word,n), n, fill = 10)) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
###decide to remove the word "Like" from further analysis -- it does not have a sentiment and has almost
###double the frequency of the next most common word
View(sentiments_nrc)
#######what are the most common sentiments within ted talks grouped by their most popular rating#########
sentiment_plot <- sentiments_nrc %>%
filter(!word %in% c("like")) %>%
filter(!sentiment %in% c("positive", "negative")) %>%
count(max_rating, sentiment) %>%
group_by(max_rating) %>%
mutate(sentiment_count = sum(n)) %>%
ungroup() %>%
mutate(prop = n/ sentiment_count)
ggplot(sentiment_plot, aes(sentiment, prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free", labeller = ) +
coord_flip() +
ylab("") +
xlab("Sentiment") +
ggtitle("Distribution of Sentiments of Words used in Ted Talks by Rating")
View(sentiment_plot)
##### what are the top ten words used within ted talks grouped by their most popular rating #####
word_counts <- sentiments_bing %>%
filter(!word %in% c("like")) %>%
count(max_rating, word) %>%
group_by(max_rating) %>%
mutate(rating_counts = sum(n)) %>%
ungroup() %>%
mutate(prop = n / rating_counts)
top <- word_counts %>%
group_by(max_rating) %>%
top_n(n = 10, wt = prop) %>%
ungroup() %>%
arrange(desc(prop))
ggplot(top, aes(reorder(word, prop), prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free") +
coord_flip() +
ylab("") +
xlab("Top Ten Words") +
ggtitle("Top Ten Words used in Ted Talks by rating")
#######what are the most common sentiments within ted talks grouped by their most popular rating#########
sentiment_plot <- sentiments_nrc %>%
filter(!word %in% c("like", "right")) %>%
filter(!sentiment %in% c("positive", "negative")) %>%
count(max_rating, sentiment) %>%
group_by(max_rating) %>%
mutate(sentiment_count = sum(n)) %>%
ungroup() %>%
mutate(prop = n/ sentiment_count)
ggplot(sentiment_plot, aes(sentiment, prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free", labeller = ) +
coord_flip() +
ylab("") +
xlab("Sentiment") +
ggtitle("Distribution of Sentiments of Words used in Ted Talks by Rating")
##### what are the top ten words used within ted talks grouped by their most popular rating #####
word_counts <- sentiments_bing %>%
filter(!word %in% c("like","right")) %>%
count(max_rating, word) %>%
group_by(max_rating) %>%
mutate(rating_counts = sum(n)) %>%
ungroup() %>%
mutate(prop = n / rating_counts)
top <- word_counts %>%
group_by(max_rating) %>%
top_n(n = 10, wt = prop) %>%
ungroup() %>%
arrange(desc(prop))
ggplot(top, aes(reorder(word, prop), prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free") +
coord_flip() +
ylab("") +
xlab("Top Ten Words") +
ggtitle("Top Ten Words used in Ted Talks by rating")
#######what's the average sentiment//how positive/negative is each talk grouped by popular rating#########
pos_neg <- sentiments_bing %>%
filter(!word %in% c("like", "right")) %>%
count(max_rating, sentiment) %>%
group_by(max_rating) %>%
mutate(sentiment_count = sum(n)) %>%
ungroup() %>%
mutate(prop = n / sentiment_count)
ggplot(pos_neg, aes(sentiment, prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free", labeller = ) +
coord_flip() +
ggtitle("Frequency of Postive + Negative words used in Ted Talks by rating") +
xlab("") +
ylab("")
words_used <- transcripts_clean %>%
count(max_rating, word) %>%
group_by(max_rating) %>%
mutate(word_count = sum(n)) %>%
top_n(n = 10, wt = word_count) %>%
ungroup() %>%
mutate(prop = n / word_count)
ggplot(words_used, aes(word, prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free") +
coord_flip()
View(full_data)
### what is the distribution of ratings given to ted talks ###
rating_dist <- transcripts_clean %>%
distinct(name, max_rating) %>%
group_by(max_rating) %>%
count()
ggplot(rating_dist, aes(reorder(max_rating, n), n, fill = max_rating)) +
geom_col(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Max Rating") +
ylab("Count") +
ggtitle("Distribution of Max Ratings given to all Ted Talks")
#######what's the average sentiment//how positive/negative is each talk grouped by popular rating#########
pos_neg <- sentiments_bing %>%
filter(!word %in% c("like", "right")) %>%
count(max_rating, sentiment) %>%
group_by(max_rating) %>%
mutate(sentiment_count = sum(n)) %>%
ungroup() %>%
mutate(prop = n / sentiment_count)
ggplot(pos_neg, aes(sentiment, prop, fill = max_rating)) +
geom_col(show.legend = FALSE) +
facet_wrap(~max_rating, scales = "free", labeller = ) +
coord_flip() +
ggtitle("Frequency of Postive + Negative words used in Ted Talks by rating") +
xlab("") +
ylab("")
View(sentiments_bing)
sentiments_bing %>%
filter(max_rating %in% c("Obnoxious"))
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment")
sentiments_bing %>%
filter(max_rating %in% c("Obnoxious")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment")
sentiments_bing %>%
filter(max_rating %in% c("Obnoxious", "Courageous")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment + max_rating, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment")
sentiments_bing %>%
filter(max_rating %in% c("Obnoxious", "Courageous")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment")
sentiments_bing %>%
filter(max_rating %in% c("Obnoxious", "Courageous")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
facet_wrap(~ max_rating, scales = "free")
sentiments_bing %>%
filter(max_rating %in% c("Courageous")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment")
sentiments_bing %>%
filter(max_rating %in% c("Courageous")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment + max_rating, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment")
sentiments_bing %>%
filter(max_rating %in% c("Courageous", "OK")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment + max_rating, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment")
sentiments_bing %>%
filter(max_rating %in% c("Courageous", "OK")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment")
sentiments_bing %>%
filter(max_rating %in% c("OK")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is OK")
sentiments_bing %>%
filter(max_rating %in% c("OK")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is OK")
sentiments_bing %>%
filter(max_rating %in% c("Obnoxious")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is Obnoxious")
sentiments_bing %>%
filter(max_rating %in% c("Courageous")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is Courageous")
sentiments_bing %>%
filter(!word %in% c("like", "right")) %>%
filter(max_rating %in% c("OK")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is OK")
sentiments_bing %>%
filter(!word %in% c("like", "right")) %>%
filter(max_rating %in% c("Obnoxious")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is Obnoxious")
sentiments_nrc %>%
filter(!word %in% c("like", "right")) %>%
filter(max_rating %in% c("Courageous")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is Courageous")
sentiments_nrc %>%
filter(!word %in% c("like", "right")) %>%
filter(max_rating %in% c("Obnoxious")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is Obnoxious")
sentiments_bing %>%
filter(!word %in% c("like", "right")) %>%
filter(max_rating %in% c("OK")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is OK")
sentiments_bing %>%
filter(!word %in% c("like", "right")) %>%
filter(max_rating %in% c("OK")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Positive + Negative Sentiment when Rating is OK")
sentiments_nrc %>%
filter(!word %in% c("like", "right")) %>%
filter(max_rating %in% c("OK")) %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y= n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
ylab("count") +
facet_wrap(~ sentiment, scales = "free") +
coord_flip() +
ggtitle("Top 20 Words That Contributed to Sentiment when Rating is OK")
knitr::opts_chunk$set(echo = TRUE)
ci.mean(n=32, xbar=0.91, s2=0.2, alpha=0.01, distr="t")
